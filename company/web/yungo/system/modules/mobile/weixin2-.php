<?php 
function isWeixin(){    $agent = strtolower($_SERVER['HTTP_USER_AGENT']);    $is_weixin = strpos($agent, 'micromessenger') ? true : false ;    if($is_weixin){        return true;    }else{        return false;    }  }function get_http(){    return (isset($_SERVER['HTTPS']) && (strtolower($_SERVER['HTTPS']) != 'off')) ? 'https://' : 'http://';}function get_domain(){    /* 协议 */    $protocol = get_http();    /* 域名或IP地址 */    if (isset($_SERVER['HTTP_X_FORWARDED_HOST']))    {        $host = $_SERVER['HTTP_X_FORWARDED_HOST'];    }    elseif (isset($_SERVER['HTTP_HOST']))    {        $host = $_SERVER['HTTP_HOST'];    }    else    {        /* 端口 */        if (isset($_SERVER['SERVER_PORT']))        {            $port = ':' . $_SERVER['SERVER_PORT'];            if ((':80' == $port && 'http://' == $protocol) || (':443' == $port && 'https://' == $protocol))            {                $port = '';            }        }        else        {            $port = '';        }        if (isset($_SERVER['SERVER_NAME']))        {            $host = $_SERVER['SERVER_NAME'] . $port;        }        elseif (isset($_SERVER['SERVER_ADDR']))        {            $host = $_SERVER['SERVER_ADDR'] . $port;        }    }    return $protocol . $host;}//跳转function app_redirect($url,$time=0,$msg=''){    //多行URL地址支持    $url = str_replace(array("\n", "\r"), '', $url);    if(empty($msg))        $msg    =   "系统将在{$time}秒之后自动跳转到{$url}！";    if (!headers_sent()) {        // redirect        if(0===$time) {        	if(substr($url,0,1)=="/")        	{        		header("Location:".get_domain().$url);        	}        	else        	{        		header("Location:".$url);        	}        }else {            header("refresh:{$time};url={$url}");            echo($msg);        }        exit();    }else {        $str    = "<meta http-equiv='Refresh' content='{$time};URL={$url}'>";        if($time!=0)            $str   .=   $msg;        exit($str);    }}$uid=intval(_encrypt(_getcookie("uid"),'DECODE'));		$utype=_encrypt(_getcookie("utype"),'DECODE');$ushell=_encrypt(_getcookie("ushell"),'DECODE');

if($uid==NULL){//判断是否移动端$is_weixin=isWeixin();
if ($is_weixin){require_once "jssdk.php";
require_once "weixin.php";
$weixins_app_id= "wx90b98c30d7313a23";$weixins_app_secret= "e8a719903797523c61a268756752af1a";if($_REQUEST['code'] && $_REQUEST['state']==1){  //检测到威信登陆 返回				$weixin=new weixin($weixins_app_id,$weixins_app_secret,get_domain().APP_ROOT."/index.php");	$wx_info=$weixin->scope_get_userinfo($_REQUEST['code']);  //获取威信信息//会员登陆	$qq_openid = $wx_info["openid"];	$qq_name = $wx_info["nickname"];	$go_user_info = $this->db->GetOne("select * from `@#_member_band` where `b_code` = '$qq_openid' and `b_type` = 'weixin' LIMIT 1");	if(!$go_user_info){							/* 添加新会员*/			qq_add_member($qq_openid,$qq_name);		}else{					$uid = intval($go_user_info['b_uid']);			$go_member_info = $this->db->GetOne("select uid from `@#_member` where `uid` = '$uid' LIMIT 1");			if(!$go_member_info){				$this->db->Query("DELETE FROM `@#_member_band` WHERE `b_uid` = '$uid'");								/* 添加新会员*/				qq_add_member($qq_openid,$qq_name);			}else{									/* 更新会员*/				qq_set_member($uid,'login_bind');			}		}		}	else{  //检测到威信登陆 				$jssdk = new JSSDK($weixins_app_id,$weixins_app_secret);			$signPackage = $jssdk->GetSignPackage();			//print_r($signPackage);			$dizhi=$_SERVER["QUERY_STRING"];			$weixin_1=new weixin($weixins_app_id,$weixins_app_secret,get_domain().'/index.php?'.$dizhi);
			
									$wx_url=$weixin_1->scope_get_code();				app_redirect($wx_url);
}
}}		function qq_add_member($qq_openid,$qq_name){			$db=System::load_sys_class('model');				$go_user_info["nickname"]=$qq_name;		$go_user_info["qq_openid"]=$qq_openi;				$member_db=System::load_app_class('base','member');		$memberone=$member_db->get_user_info();				if($memberone){			$go_user_id = $memberone['uid'];						$go_user_time = time();			$this->db->Query("INSERT INTO `@#_member_band` (`b_uid`, `b_type`, `b_code`, `b_time`) VALUES ('$go_user_id', 'weixin', '$qq_openid', '$go_user_time')");			$bands = trim($memberones['band'],",");						$bands = $bands.",weixin";			$this->db->Query("UPDATE `@#_member` SET `band` = '$bands' where `uid` = '$go_user_id' limit 1");			_message("微信登陆成功",G_WEB_PATH);			return;		}		$go_user_time = time();		if(!$go_user_info)$go_user_info=array('nickname'=>'QU'.$go_user_time.rand(0,9));		$go_y_user = $db->GetOne("select * from `@#_member` where `username` = '$go_user_info[nickname]' LIMIT 1");					if($go_y_user)$go_user_info['nickname'] .= rand(1000,9999);		$go_user_name = _htmtocode($go_user_info['nickname']);			$go_user_img  = 'photo/member.jpg';		$go_user_pass = md5('123456');		$db->Autocommit_start();					$q1 = $db->Query("INSERT INTO `@#_member` (`username`,`password`,`img`,`band`,`time`) VALUES ('$go_user_name','$go_user_pass','$go_user_img','weixin','$go_user_time')");		$go_user_id = $db->insert_id();		$q2 = $db->Query("INSERT INTO `@#_member_band` (`b_uid`, `b_type`, `b_code`, `b_time`) VALUES ('$go_user_id', 'weixin', '$qq_openid', '$go_user_time')");				if($q1 && $q2){			$db->Autocommit_commit();			qq_set_member($go_user_id,'add');		}else{			$db->Autocommit_rollback();			_message("登录失败!",G_WEB_PATH);		}			}			function qq_set_member($uid=null,$type='bind_add_login'){			$db=System::load_sys_class('model');		$member_db=System::load_app_class('base','member');		$memberone=$member_db->get_user_info();		if($memberone){			//_message("该微信已经被其他用户所绑定！",WEB_PATH.'/login');		}		$member = $db->GetOne("select uid,password,mobile,email,username from `@#_member` where `uid` = '$uid' LIMIT 1");				$_COOKIE['uid'] = null;		$_COOKIE['ushell'] = null;		$_COOKIE['UID'] = null;		$_COOKIE['USHELL'] = null;					$time = time();		$user_ip = _get_ip_dizhi();		$db->GetOne("UPDATE `@#_member` SET `user_ip` = '$user_ip',`login_time` = '$time' where `uid` = '$uid'");						$s1 = _setcookie("uid",_encrypt($member['uid']),60*60*24*7);					$s2 = _setcookie("ushell",_encrypt(md5($member['uid'].$member['password'].$member['mobile'].$member['email'])),60*60*24*7);				$domain = System::load_sys_config('domain');		$dizhi=$_SERVER["QUERY_STRING"];				if(isset($domain[$_SERVER['HTTP_HOST']])){			if($domain[$_SERVER['HTTP_HOST']]['m'] == 'mobile'){					$callback_url =  WEB_PATH.$dizhi;			}else{					$callback_url =  WEB_PATH.$dizhi;								}						}else{			$callback_url =  WEB_PATH."/member/home";			}			if($s1 && $s2){			if(!$member['email'] || !$member['mobile']){				_message("欢迎你[".$member['username']."]默认密码123456",$callback_url);			}				_message("欢迎你![".$member['username']."]",$callback_url);		}else{			_message("登录失败请检查cookie!",G_WEB_PATH);		}	else
	echo "非微信浏览器禁止访问";
	exit;	}
?>